version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: saas_crm
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  auth-svc:
    build:
      context: ./services/auth-svc
    container_name: auth-svc
    ports:
      - "3001:3000"
    depends_on:
      - mongo
      - rabbitmq
    env_file:
      - ./services/auth-svc/.env.example

  contacts-svc:
    build:
      context: ./services/contacts-svc
    container_name: contacts-svc
    ports:
      - "3002:3000"
    depends_on:
      - mongo
      - rabbitmq
    env_file:
      - ./services/contacts-svc/.env.example

  billing-svc:
    build:
      context: ./services/billing-svc
    container_name: billing-svc
    ports:
      - "3003:3000"
    depends_on:
      - mysql
      - rabbitmq
    env_file:
      - ./services/billing-svc/.env.example

  web:
    build:
      context: ./apps/web
    container_name: web
    ports:
      - "3000:3000"
    depends_on:
      - auth-svc
      - contacts-svc
      - billing-svc
    env_file:
      - ./apps/web/.env.example

volumes:
  mongo-data:
  mysql-data: